/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var A=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var _=(c,e)=>{for(var t in e)A(c,t,{get:e[t],enumerable:!0})},L=(c,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of N(e))!M.call(c,r)&&r!==t&&A(c,r,{get:()=>e[r],enumerable:!(s=O(e,r))||s.enumerable});return c};var U=c=>L(A({},"__esModule",{value:!0}),c);var k={};_(k,{default:()=>b});module.exports=U(k);var F=require("obsidian");var d=require("obsidian"),x={showInStatusBar:!0},m=class extends d.PluginSettingTab{constructor(t,s){super(t,s);this.plugin=s}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Note View Tracker Settings"}),new d.Setting(t).setName("Show view count in status bar").setDesc("If enabled, the view count of the current note will be shown in the status bar.").addToggle(s=>s.setValue(this.plugin.settings.showInStatusBar).onChange(async r=>{this.plugin.settings.showInStatusBar=r,await this.plugin.savePluginData(),this.plugin.updateStatusBar(this.app.workspace.getActiveFile())}))}};var g=class{constructor(e,t){this.isActive=!1;this.plugin=e,this.workspace=e.app.workspace,this.eventEmitter=t}async start(){this.isActive||(this.isActive=!0,this.plugin.registerEvent(this.workspace.on("file-open",this.handleFileOpen.bind(this))),this.plugin.registerEvent(this.workspace.on("active-leaf-change",this.handleActiveLeafChange.bind(this))))}async stop(){this.isActive=!1}isTracking(){return this.isActive}handleFileOpen(e){!e||!this.isActive||this.trackFileAccess(e)}handleActiveLeafChange(){if(!this.isActive)return;let e=this.workspace.getActiveFile();e&&this.trackFileAccess(e)}trackFileAccess(e){let t={file:e,timestamp:Date.now(),type:"file-access"};this.eventEmitter.emit("file-access",t)}};var T=class extends Error{constructor(t,s,r="medium",n="unknown",a={},i="",o=!1,u=[],h=3){super(t);this.retryCount=0;this.name=this.constructor.name,this.code=s,this.severity=r,this.category=n,this.details={...a},this.timestamp=Date.now(),this.context=i,this.isRecoverable=o,this.recoveryActions=[...u],this.correlationId=this.generateCorrelationId(),this.maxRetries=h,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}generateCorrelationId(){return`${Date.now()}-${Math.random().toString(36).substr(2,9)}`}getFormattedMessage(){let t=this.context?` [${this.context}]`:"",s=Object.keys(this.details).length>0?` Details: ${JSON.stringify(this.details)}`:"";return`${this.message}${t}${s}`}toObject(){return{name:this.name,message:this.message,code:this.code,severity:this.severity,category:this.category,details:this.details,timestamp:this.timestamp,context:this.context,isRecoverable:this.isRecoverable,recoveryActions:this.recoveryActions,correlationId:this.correlationId,retryCount:this.retryCount,maxRetries:this.maxRetries,stack:this.stack}}withRetry(){let t=Object.create(Object.getPrototypeOf(this));return Object.assign(t,this),t.retryCount=this.retryCount+1,t}canRetry(){return this.isRecoverable&&this.retryCount<this.maxRetries}};var l=class extends T{constructor(e,t="FRONTMATTER_UPDATE_FAILED",s={},r="",n=!0){super(e,t,"medium","data_processing",s,r,n,["Retry operation","Check file permissions","Verify file format","Create backup"])}};var p=class{constructor(e){this.plugin=e,this.vault=e.app.vault}async readCounter(e,t){try{let s=await this.getFrontmatter(e);if(!s||!(t in s))return 0;let r=s[t];if(typeof r=="number")return r;let n=parseInt(r,10);return isNaN(n)?0:n}catch(s){throw new l(`Failed to read counter '${t}' from file '${e.path}': ${s.message}`)}}async updateCounter(e,t,s){try{let r=await this.getFrontmatter(e)||{};r[t]=s,await this.updateFrontmatter(e,r)}catch(r){throw new l(`Failed to update counter '${t}' in file '${e.path}': ${r.message}`)}}hasValidFrontmatter(e){try{let t=this.plugin.app.metadataCache.getFileCache(e);return!!(t&&t.frontmatter)}catch(t){return!1}}async createFrontmatter(e,t){try{let s=await this.vault.read(e),r=this.formatFrontmatterYaml(t),n=s.startsWith(`---
`)?s.replace(/^---\n.*?\n---\n/s,r):r+s;await this.vault.modify(e,n)}catch(s){throw new l(`Failed to create frontmatter for file '${e.path}': ${s.message}`)}}async batchUpdateCounters(e){let t={successful:[],failed:[],total:e.length};for(let s of e)try{await this.updateCounter(s.file,s.key,s.value),t.successful.push(s)}catch(r){t.failed.push({update:s,error:r instanceof Error?r.message:"Unknown error"})}return t}async getFrontmatter(e){try{let t=this.plugin.app.metadataCache.getFileCache(e);if(t&&t.frontmatter)return{...t.frontmatter};let r=(await this.vault.read(e)).match(/^---\n(.*?)\n---\n/s);if(r){let n=r[1];return this.parseYaml(n)}return null}catch(t){throw new l(`Failed to get frontmatter from file '${e.path}': ${t.message}`)}}async updateFrontmatter(e,t){try{let s=await this.vault.read(e),r=this.formatFrontmatterYaml(t),n;s.startsWith(`---
`)?n=s.replace(/^---\n.*?\n---\n/s,r):n=r+s,await this.vault.modify(e,n)}catch(s){throw new l(`Failed to update frontmatter in file '${e.path}': ${s.message}`)}}formatFrontmatterYaml(e){let t=["---"];for(let[s,r]of Object.entries(e))r==null?t.push(`${s}: null`):typeof r=="string"?t.push(`${s}: "${r}"`):typeof r=="number"||typeof r=="boolean"?t.push(`${s}: ${r}`):Array.isArray(r)?(t.push(`${s}:`),r.forEach(n=>{t.push(`  - ${JSON.stringify(n)}`)})):t.push(`${s}: ${JSON.stringify(r)}`);return t.push("---"),t.join(`
`)+`
`}parseYaml(e){let t={},s=e.split(`
`);for(let r of s){let n=r.trim();if(!n||n.startsWith("#"))continue;let a=n.indexOf(":");if(a===-1)continue;let i=n.substring(0,a).trim(),o=n.substring(a+1).trim();o==="null"?t[i]=null:o==="true"?t[i]=!0:o==="false"?t[i]=!1:isNaN(Number(o))?o.startsWith('"')&&o.endsWith('"')?t[i]=o.slice(1,-1):t[i]=o:t[i]=Number(o)}return t}};var v=class{constructor(e){this.includePaths=[];this.excludePaths=[];this.includePatterns=[];this.excludePatterns=[];e&&this.updateFromConfig(e)}shouldTrackFile(e){if(!e||!e.path)return!1;let t=e.path;return this.matchesExcludePattern(t)?!1:this.includePaths.length===0?!0:this.matchesIncludePattern(t)}isWithinScope(e){return!e||this.matchesExcludePattern(e)?!1:this.includePaths.length===0?!0:this.matchesIncludePattern(e)}addIncludePath(e){e&&!this.includePaths.includes(e)&&(this.includePaths.push(e),this.updateIncludePatterns())}removeIncludePath(e){let t=this.includePaths.indexOf(e);return t>-1?(this.includePaths.splice(t,1),this.updateIncludePatterns(),!0):!1}addExcludePath(e){e&&!this.excludePaths.includes(e)&&(this.excludePaths.push(e),this.updateExcludePatterns())}removeExcludePath(e){let t=this.excludePaths.indexOf(e);return t>-1?(this.excludePaths.splice(t,1),this.updateExcludePatterns(),!0):!1}getFilterRules(){return{includePaths:[...this.includePaths],excludePaths:[...this.excludePaths]}}resetFilters(){this.includePaths=[],this.excludePaths=[],this.includePatterns=[],this.excludePatterns=[]}updateFromConfig(e){this.includePaths=e.includedPaths?[...e.includedPaths]:[],this.excludePaths=e.excludedPaths?[...e.excludedPaths]:[],this.updateIncludePatterns(),this.updateExcludePatterns()}matchesIncludePattern(e){return this.includePatterns.length===0?!0:this.includePatterns.some(t=>t.test(e))}matchesExcludePattern(e){return this.excludePatterns.some(t=>t.test(e))}updateIncludePatterns(){this.includePatterns=this.includePaths.map(e=>this.pathToRegex(e))}updateExcludePatterns(){this.excludePatterns=this.excludePaths.map(e=>this.pathToRegex(e))}pathToRegex(e){let t=e.replace(/\./g,"\\.").replace(/\*/g,".*").replace(/\?/g,".").replace(/\//g,"\\/");return e.endsWith("*")||(t+="$"),e.startsWith("*")||(t="^"+t),new RegExp(t)}testPath(e){return this.isWithinScope(e)}};var E=class{constructor(){this.listeners=new Map;this.nextId=0;this.maxListeners=100}on(e,t){return this.addListener(e,t,!1)}once(e,t){return this.addListener(e,t,!0)}off(e,t){let s=this.listeners.get(e);if(!s)return!1;let r=s.findIndex(n=>n.listener===t);return r===-1?!1:(s.splice(r,1),s.length===0&&this.listeners.delete(e),!0)}async emit(e,t){let s=this.listeners.get(e);if(!s||s.length===0)return;let r=[...s],n=[],a=r.map(async i=>{try{let o=i.listener(t);o&&typeof o.then=="function"&&await o,i.once&&n.push(i.id)}catch(o){console.error(`Error in event listener for '${String(e)}':`,o)}});await Promise.all(a),this.removeListenersById(e,n)}emitSync(e,t){let s=this.listeners.get(e);if(!s||s.length===0)return;let r=[...s],n=[];for(let a of r)try{a.listener(t),a.once&&n.push(a.id)}catch(i){console.error(`Error in event listener for '${String(e)}':`,i)}this.removeListenersById(e,n)}removeAllListeners(e){e?this.listeners.delete(e):this.listeners.clear()}listenerCount(e){let t=this.listeners.get(e);return t?t.length:0}eventNames(){return Array.from(this.listeners.keys())}hasListeners(e){return this.listenerCount(e)>0}setMaxListeners(e){this.maxListeners=Math.max(1,e)}getMaxListeners(){return this.maxListeners}addListener(e,t,s){this.listeners.has(e)||this.listeners.set(e,[]);let r=this.listeners.get(e);r.length>=this.maxListeners&&console.warn(`Warning: Possible EventEmitter memory leak detected. ${r.length+1} listeners added for event '${String(e)}'. Use setMaxListeners() to increase limit.`);let n=String(this.nextId++),a={listener:t,once:s,id:n};return r.push(a),()=>{this.removeListenersById(e,[n])}}removeListenersById(e,t){if(t.length===0)return;let s=this.listeners.get(e);if(s){for(let r=s.length-1;r>=0;r--)t.includes(s[r].id)&&s.splice(r,1);s.length===0&&this.listeners.delete(e)}}};var f=class{constructor(e=1e3){this.cache=new Map,this.maxSize=e,this.stats={hits:0,misses:0}}shouldProcess(e,t){let s=this.cache.get(e);return s?(this.stats.hits++,Date.now()-s.lastAccess>=t):(this.stats.misses++,!0)}update(e){let t=Date.now(),s=this.cache.get(e);s?(s.lastAccess=t,s.accessCount++):(this.cache.size>=this.maxSize&&this.evictOldest(),this.cache.set(e,{filePath:e,lastAccess:t,accessCount:1,firstAccess:t}))}get(e){let t=this.cache.get(e);if(t)return this.stats.hits++,{...t};this.stats.misses++}clear(){this.cache.clear(),this.stats.hits=0,this.stats.misses=0}getSize(){return this.cache.size}setMaxSize(e){for(this.maxSize=e;this.cache.size>this.maxSize;)this.evictOldest()}getMaxSize(){return this.maxSize}getStats(){return{hits:this.stats.hits,misses:this.stats.misses,size:this.cache.size,maxSize:this.maxSize}}startCleanup(e){this.cleanupInterval&&clearInterval(this.cleanupInterval),this.cleanupInterval=setInterval(()=>{this.performCleanup()},e)}stopCleanup(){this.cleanupInterval&&(clearInterval(this.cleanupInterval),this.cleanupInterval=void 0)}evictOldest(){let e,t=1/0;for(let[s,r]of this.cache)r.lastAccess<t&&(t=r.lastAccess,e=s);e&&this.cache.delete(e)}performCleanup(){let e=Date.now(),t=30*60*1e3;for(let[s,r]of this.cache)e-r.lastAccess>t&&this.cache.delete(s)}getAllRecords(){return Array.from(this.cache.values()).map(e=>({...e}))}getRecordsByAccessCount(e){return this.getAllRecords().filter(t=>t.accessCount>=e)}getMostAccessed(e=10){return this.getAllRecords().sort((t,s)=>s.accessCount-t.accessCount).slice(0,e)}getRecentlyAccessed(e=10){return this.getAllRecords().sort((t,s)=>s.lastAccess-t.lastAccess).slice(0,e)}removeRecord(e){return this.cache.delete(e)}hasRecord(e){return this.cache.has(e)}getHitRate(){let e=this.stats.hits+this.stats.misses;return e>0?this.stats.hits/e:0}};var R=class{getDebounceKey(e){return e.type}handleEvent(e,t,s){return t.timerId&&clearTimeout(t.timerId),t.latestEvent=e,t.lastEventTime=Date.now(),t.eventCount++,t.events.push(e),t.timerId=setTimeout(()=>{this.executeDebounced(t,s)},s.delayMs),!1}executeDebounced(e,t){e.state="executing"}getName(){return"standard"}},C=class{constructor(){this.lastExecutionTimes=new Map}getDebounceKey(e){return e.type}handleEvent(e,t,s){let r=this.getDebounceKey(e),n=Date.now(),a=this.lastExecutionTimes.get(r)||0;if(n-a<s.delayMs){if(t.latestEvent=e,t.lastEventTime=n,t.eventCount++,t.events.push(e),!t.timerId){let i=s.delayMs-(n-a);t.timerId=setTimeout(()=>{this.executeThrottled(t,s,r)},i)}return!1}return this.lastExecutionTimes.set(r,n),!0}executeThrottled(e,t,s){this.lastExecutionTimes.set(s,Date.now()),e.state="executing"}getName(){return"throttle"}},D=class{getDebounceKey(e){let s=Math.floor(e.timestamp/1e3);return`${e.type}_${s}`}handleEvent(e,t,s){if(t.latestEvent=e,t.lastEventTime=Date.now(),t.eventCount++,t.events.push(e),!t.timerId){let i=(Math.floor(e.timestamp/1e3)+1)*1e3-Date.now();t.timerId=setTimeout(()=>{t.state="executing"},Math.max(i,0))}return!1}getName(){return"time-window"}},w=class{constructor(e,t,s="standard"){this.eventEmitter=e;this.config=t;this.debounceItems=new Map;this.stats={totalEvents:0,emittedEvents:0,debouncedEvents:0,totalWaitTime:0,batchStats:{totalBatches:0,totalBatchSize:0,maxBatchSize:0}};this.initializeStrategy(s),this.startCleanup()}initializeStrategy(e){switch(e){case"throttle":this.strategy=new C;break;case"time-window":this.strategy=new D;break;default:this.strategy=new R}}startCleanup(){this.cleanupInterval=setInterval(()=>{this.cleanupExpiredItems()},6e4)}cleanupExpiredItems(){let e=Date.now(),t=3e5;for(let[s,r]of this.debounceItems)e-r.lastEventTime>t&&r.state==="idle"&&(r.timerId&&clearTimeout(r.timerId),this.debounceItems.delete(s))}on(e,t){return this.eventEmitter.on(e,t),this}once(e,t){return this.eventEmitter.once(e,t),this}off(e,t){return this.eventEmitter.off(e,t),this}async emit(e){this.stats.totalEvents++;let t=this.strategy.getDebounceKey(e),s=this.debounceItems.get(t);s||(s={eventType:e.type,latestEvent:e,state:"idle",firstEventTime:Date.now(),lastEventTime:Date.now(),eventCount:0,events:[]},this.debounceItems.set(t,s)),this.config.leading&&s.state==="idle"&&(s.state="waiting",await this.executeEvent(e),this.stats.emittedEvents++),this.strategy.handleEvent(e,s,this.config)?(await this.executeEvent(e),this.stats.emittedEvents++):(this.stats.debouncedEvents++,s.state="waiting",s.timerId&&clearTimeout(s.timerId),s.timerId=setTimeout(async()=>{await this.executeDebounced(s)},this.config.delayMs)),this.config.maxWaitMs&&Date.now()-s.firstEventTime>=this.config.maxWaitMs&&(s.timerId&&clearTimeout(s.timerId),await this.executeDebounced(s))}async executeDebounced(e){if(e.state!=="executing"){e.state="executing";try{this.config.trailing!==!1&&(e.events.length>1?await this.executeBatch(e):await this.executeEvent(e.latestEvent),this.stats.emittedEvents++);let t=Date.now()-e.firstEventTime;this.stats.totalWaitTime+=t,e.state="idle",e.firstEventTime=Date.now(),e.eventCount=0,e.events=[]}catch(t){console.error("Error executing debounced event:",t),e.state="idle"}}}async executeEvent(e){await this.eventEmitter.emit(e)}async executeBatch(e){this.stats.batchStats.totalBatches++,this.stats.batchStats.totalBatchSize+=e.events.length,this.stats.batchStats.maxBatchSize=Math.max(this.stats.batchStats.maxBatchSize,e.events.length);let t={...e.latestEvent,id:`batch_${e.latestEvent.id}`,type:`${e.latestEvent.type}.batch`,payload:{events:e.events,count:e.events.length,originalPayload:e.latestEvent.payload}};await this.eventEmitter.emit(t)}listenerCount(e){return this.eventEmitter.listenerCount(e)}eventNames(){return this.eventEmitter.eventNames()}removeAllListeners(e){return this.eventEmitter.removeAllListeners(e),this}getDebounceStats(){return{totalEvents:this.stats.totalEvents,emittedEvents:this.stats.emittedEvents,debouncedEvents:this.stats.debouncedEvents,debounceRate:this.stats.totalEvents>0?this.stats.debouncedEvents/this.stats.totalEvents:0,avgWaitTime:this.stats.emittedEvents>0?this.stats.totalWaitTime/this.stats.emittedEvents:0,activeDebounceItems:this.debounceItems.size,batchStats:{totalBatches:this.stats.batchStats.totalBatches,avgBatchSize:this.stats.batchStats.totalBatches>0?this.stats.batchStats.totalBatchSize/this.stats.batchStats.totalBatches:0,maxBatchSize:this.stats.batchStats.maxBatchSize}}}getDebounceItemsStatus(){let e=Date.now();return Array.from(this.debounceItems.entries()).map(([t,s])=>({key:t,eventType:s.eventType,state:s.state,eventCount:s.eventCount,waitTime:e-s.firstEventTime,hasTimer:!!s.timerId}))}async flush(){let e=[];for(let[t,s]of this.debounceItems)s.state==="waiting"&&s.timerId&&(clearTimeout(s.timerId),e.push(this.executeDebounced(s)));await Promise.all(e)}cancel(){for(let[e,t]of this.debounceItems)t.timerId&&clearTimeout(t.timerId);this.debounceItems.clear()}updateConfig(e){this.config={...this.config,...e}}getConfig(){return{...this.config}}resetStats(){this.stats={totalEvents:0,emittedEvents:0,debouncedEvents:0,totalWaitTime:0,batchStats:{totalBatches:0,totalBatchSize:0,maxBatchSize:0}}}destroy(){this.cleanupInterval&&(clearInterval(this.cleanupInterval),this.cleanupInterval=void 0),this.cancel()}};function S(c,e,t="standard"){return new w(c,e,t)}var I=class{constructor(e){this.queue=[];this.maxBatchSize=10;this.flushInterval=5e3;this.isProcessing=!1;this.isPaused=!1;this.completionCallbacks=[];this.debouncedFlush=S(()=>this.flush(),500);this.frontmatterManager=e,this.startAutoFlush()}enqueueUpdate(e){if(this.isPaused)return;let t={...e,timestamp:e.timestamp||Date.now(),retryCount:e.retryCount||0,priority:e.priority||"normal"};t.priority==="high"?this.queue.unshift(t):this.queue.push(t),this.queue.length>=this.maxBatchSize&&this.debouncedFlush()}async flush(){if(this.isProcessing||this.queue.length===0)return this.createEmptyResult();this.isProcessing=!0;let e=Date.now(),t=this.queue.splice(0,this.maxBatchSize),s={processedCount:t.length,successCount:0,failureCount:0,processingTime:0,failures:[]};try{for(let r of t)try{await this.processOperation(r),s.successCount++}catch(n){s.failureCount++,s.failures.push({operation:r,error:n instanceof Error?n.message:"Unknown error",failureTime:Date.now()}),r.retryCount<3&&(r.retryCount++,this.queue.push(r))}return s.processingTime=Date.now()-e,this.completionCallbacks.forEach(r=>{try{r(s)}catch(n){console.error("Error in completion callback:",n)}}),s}finally{this.isProcessing=!1}}setMaxBatchSize(e){this.maxBatchSize=Math.max(1,e)}setFlushInterval(e){this.flushInterval=Math.max(1e3,e),this.restartAutoFlush()}getQueueStatus(){let e=this.queue.filter(t=>t.priority==="high").length;return{queueSize:this.queue.length,isProcessing:this.isProcessing,isPaused:this.isPaused,nextFlushTime:this.flushTimer?Date.now()+this.flushInterval:0,highPriorityCount:e}}pause(){this.isPaused=!0,this.stopAutoFlush()}resume(){this.isPaused=!1,this.startAutoFlush()}clear(){this.queue=[]}getPendingCount(){return this.queue.length}isProcessing(){return this.isProcessing}onProcessingComplete(e){return this.completionCallbacks.push(e),()=>{let t=this.completionCallbacks.indexOf(e);t>-1&&this.completionCallbacks.splice(t,1)}}async processOperation(e){let s=await this.frontmatterManager.readCounter(e.file,e.key)+e.value;await this.frontmatterManager.updateCounter(e.file,e.key,s)}startAutoFlush(){this.flushTimer&&clearInterval(this.flushTimer),this.flushTimer=setInterval(()=>{!this.isPaused&&this.queue.length>0&&this.debouncedFlush()},this.flushInterval)}stopAutoFlush(){this.flushTimer&&(clearInterval(this.flushTimer),this.flushTimer=void 0)}restartAutoFlush(){this.stopAutoFlush(),this.startAutoFlush()}createEmptyResult(){return{processedCount:0,successCount:0,failureCount:0,processingTime:0,failures:[]}}destroy(){this.stopAutoFlush(),this.clear(),this.completionCallbacks=[]}getOperationsByPriority(e){return this.queue.filter(t=>t.priority===e)}getOldestOperation(){return this.queue.reduce((e,t)=>!e||t.timestamp<e.timestamp?t:e,void 0)}getQueuedFilePaths(){return[...new Set(this.queue.map(e=>e.file.path))]}removeOperationsForFile(e){let t=this.queue.length;return this.queue=this.queue.filter(s=>s.file.path!==e),t-this.queue.length}};var y=class{constructor(e,t,s="view_count"){this.frontmatterManager=e,this.cacheManager=t,this.counterKey=s}async getMostFrequent(e){return(await this.getAllStats()).sort((s,r)=>r.accessCount-s.accessCount).slice(0,e)}async getMostRecent(e){return(await this.getAllStats()).sort((s,r)=>r.lastAccess-s.lastAccess).slice(0,e)}async getUnaccessedSince(e){let t=await this.getAllStats(),s=e.getTime();return t.filter(r=>r.lastAccess<s)}async findByAccessCount(e,t){return(await this.getAllStats()).filter(r=>r.accessCount>=e&&r.accessCount<=t)}async getAccessHistory(e){let t=await this.getFileStats(e);return t?[t.firstAccess,t.lastAccess]:[]}async getFileStats(e){try{let t=this.cacheManager.get(e.path);if(t)return t;let s=await this.frontmatterManager.readCounter(e,this.counterKey);if(s>0){let r={filePath:e.path,lastAccess:e.stat.mtime,accessCount:s,firstAccess:e.stat.ctime};return this.cacheManager.update(e.path),r}return null}catch(t){return console.error(`Error getting file stats for ${e.path}:`,t),null}}async getAllStats(){return this.cacheManager.getAllRecords()}async getAccessedInRange(e,t){return(await this.getAllStats()).filter(r=>r.lastAccess>=e&&r.lastAccess<=t)}async getAccessTrends(e){let t=await this.getAllStats(),r=Date.now()-e*24*60*60*1e3,n=t.filter(h=>h.lastAccess>=r),a=this.calculateDailyAccesses(n,e),i=this.calculateHourlyPattern(n),o=this.calculateGrowthRate(n,e),u=i.reduce((h,P)=>P.count>h.count?P:h).hour;return{dailyAccesses:a,hourlyPattern:i,growthRate:o,peakHour:u}}async searchByPattern(e){let t=await this.getAllStats();if(e.minAccessCount!==void 0&&(t=t.filter(s=>s.accessCount>=e.minAccessCount)),e.maxAccessCount!==void 0&&(t=t.filter(s=>s.accessCount<=e.maxAccessCount)),e.pathPattern){let s=new RegExp(e.pathPattern.replace(/\*/g,".*"));t=t.filter(r=>s.test(r.filePath))}return e.timeRange&&(t=t.filter(s=>s.lastAccess>=e.timeRange.start&&s.lastAccess<=e.timeRange.end)),e.sortBy&&t.sort((s,r)=>{let n=s[e.sortBy],a=r[e.sortBy],i=typeof n=="string"?n.localeCompare(a):n-a;return e.sortDirection==="desc"?-i:i}),t}async getAggregatedStats(){let e=await this.getAllStats();if(e.length===0)return{totalFiles:0,totalAccesses:0,averageAccessesPerFile:0,mostAccessedFile:null,leastAccessedFile:null,firstAccess:null,lastAccess:null,accessRanges:[]};let t=e.reduce((o,u)=>o+u.accessCount,0),s=e.reduce((o,u)=>u.accessCount>o.accessCount?u:o),r=e.reduce((o,u)=>u.accessCount<o.accessCount?u:o),n=Math.min(...e.map(o=>o.firstAccess)),a=Math.max(...e.map(o=>o.lastAccess)),i=this.calculateAccessRanges(e);return{totalFiles:e.length,totalAccesses:t,averageAccessesPerFile:t/e.length,mostAccessedFile:s,leastAccessedFile:r,firstAccess:n,lastAccess:a,accessRanges:i}}async reset(){this.cacheManager.clear()}async exportData(e){let t=await this.getAllStats();switch(e){case"json":return JSON.stringify(t,null,2);case"csv":return this.exportToCsv(t);case"markdown":return this.exportToMarkdown(t);default:throw new Error(`Unsupported export format: ${e}`)}}calculateDailyAccesses(e,t){let s=new Map;e.forEach(n=>{let a=new Date(n.lastAccess).toISOString().split("T")[0];s.set(a,(s.get(a)||0)+1)});let r=[];for(let n=0;n<t;n++){let i=new Date(Date.now()-n*24*60*60*1e3).toISOString().split("T")[0];r.push({date:i,count:s.get(i)||0})}return r.reverse()}calculateHourlyPattern(e){let t=new Map;e.forEach(r=>{let n=new Date(r.lastAccess).getHours();t.set(n,(t.get(n)||0)+1)});let s=[];for(let r=0;r<24;r++)s.push({hour:r,count:t.get(r)||0});return s}calculateGrowthRate(e,t){let r=Date.now()-t*12*60*60*1e3,n=e.filter(i=>i.lastAccess>=r).length,a=e.filter(i=>i.lastAccess<r).length;return a===0?0:(n-a)/a*100}calculateAccessRanges(e){return[{range:"1-5",min:1,max:5},{range:"6-10",min:6,max:10},{range:"11-25",min:11,max:25},{range:"26-50",min:26,max:50},{range:"51-100",min:51,max:100},{range:"100+",min:101,max:1/0}].map(s=>({range:s.range,count:e.filter(r=>r.accessCount>=s.min&&r.accessCount<=s.max).length}))}exportToCsv(e){let t=["File Path","Access Count","First Access","Last Access"],s=e.map(r=>[r.filePath,r.accessCount.toString(),new Date(r.firstAccess).toISOString(),new Date(r.lastAccess).toISOString()]);return[t,...s].map(r=>r.join(",")).join(`
`)}exportToMarkdown(e){let t=["# Access Statistics","","| File Path | Access Count | First Access | Last Access |","|-----------|--------------|--------------|-------------|"];return e.forEach(s=>{t.push(`| ${s.filePath} | ${s.accessCount} | ${new Date(s.firstAccess).toLocaleString()} | ${new Date(s.lastAccess).toLocaleString()} |`)}),t.join(`
`)}};var b=class extends F.Plugin{constructor(){super(...arguments);this.handleFileAccess=async t=>{let s=t.file;if(!s){this.updateStatusBar(null);return}if(!this.pathFilter.shouldTrackFile(s))return;let r=this.settings.minTimeBetweenUpdates||1e3;if(this.cacheManager.shouldProcess(s.path,r))try{this.batchProcessor.enqueueUpdate({file:s,key:"view_count",value:1,timestamp:Date.now(),retryCount:0,priority:"normal"}),this.cacheManager.update(s.path);let n=await this.frontmatterManager.readCounter(s,"view_count");this.pluginData.viewCounts[s.path]=n+1,this.updateStatusBar(s),await this.savePluginData()}catch(n){console.error("Error handling file access:",n)}}}async onload(){console.log("Loading Note View Tracker plugin"),await this.loadPluginData(),this.initializeComponents(),this.statusBarItemEl=this.addStatusBarItem(),this.addSettingTab(new m(this.app,this)),await this.accessTracker.start(),this.updateStatusBar(this.app.workspace.getActiveFile())}async onunload(){console.log("Unloading Note View Tracker plugin"),this.accessTracker&&await this.accessTracker.stop(),this.batchProcessor&&this.batchProcessor.destroy(),this.cacheManager&&this.cacheManager.stopCleanup()}initializeComponents(){this.eventEmitter=new E,this.frontmatterManager=new p(this),this.cacheManager=new f(1e3),this.batchProcessor=new I(this.frontmatterManager),this.dataProvider=new y(this.frontmatterManager,this.cacheManager,"view_count"),this.pathFilter=new v,this.accessTracker=new g(this,this.eventEmitter),this.cacheManager.startCleanup(6e4),this.eventEmitter.on("file-access",this.handleFileAccess.bind(this))}async updateStatusBar(t){if(t&&this.settings.showInStatusBar)try{let s=await this.dataProvider.getFileStats(t),r=s?s.accessCount:this.pluginData.viewCounts[t.path]||0;this.statusBarItemEl.setText(`View Count: ${r}`)}catch(s){let r=this.pluginData.viewCounts[t.path]||0;this.statusBarItemEl.setText(`View Count: ${r}`)}else this.statusBarItemEl.setText("")}async loadPluginData(){let t=await this.loadData();this.pluginData=Object.assign({},{viewCounts:{}},t),this.settings=Object.assign({},x,t==null?void 0:t.settings)}async savePluginData(){await this.saveData({settings:this.settings,viewCounts:this.pluginData.viewCounts})}};
